/************************************************************************
Copyright Chris Newey 2013

qiptables@hotmail.com


This file is part of Qiptables.

Qiptables is distributed under the terms of the GNU General Public License

Qiptables is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Qiptables is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Qiptables.  If not, see <http://www.gnu.org/licenses/>.

***************************************************************************/



#ifndef FORMCFGRULESET_H
#define FORMCFGRULESET_H

#include <QHideEvent>
#include <QPointer>
#include <QShowEvent>
#include <QSqlRecord>
#include <QSqlTableModel>
#include <QTableView>
#include <QVariant>
#include <QWidget>

#include "rulesettableview.h"
#include "rulesetsqltablemodel.h"
#include "formdlgruleset.h"



namespace Ui {
class FormCfgRuleset;
}


/**
\file formcfgruleset.h
\class FormCfgRuleset

\brief Browse Rulesets and call add amend delete ruleset form


***************************/
class FormCfgRuleset : public QWidget
{
    Q_OBJECT

public:

    static const int REC_ADD;
    static const int REC_EDIT;
    static const int REC_DELETE;

    explicit FormCfgRuleset(QWidget *parent = 0);
    ~FormCfgRuleset();

    /**
      \brief Get data from column of current record by using the column name
      \param colName - name of column
      \return data contained in colName
      **************/
    virtual QVariant getColumnData(QString colName);

    /**
      \brief Get a reference to the ruleset view
      \return pointer to view
      *****************/
    virtual RulesetTableView *getView();

    /**
      \brief Get a reference to the ruleset model
      \return pointer to model
      *****************/
    virtual RulesetSqlTableModel *getModel() { return model; }

public slots:

    /**
    \brief When the form is displayed set the focus to the ruleset browse
     window and select the first row then calls currentRowChanged().

    \param event generated by QT
    ****************/
    virtual void showEvent(QShowEvent *event);

    /**
     \brief When the current row changes the ruleset is displayed in a
     readonly text box.
      *****************/
    virtual void currentRowChanged();

    /**
      \brief Calls routine to add a ruleset row
      ******************/
    virtual void slotBtnAdd();

    /**
      \brief Calls routine to edit a ruleset row
      ******************/
    virtual void slotBtnEdit();

    /**
      \brief Calls routine to delete a ruleset row
      ******************/
    virtual void slotBtnDelete();


    /**
      \brief Adds a rule snippet to a rule set.

      \param useInclude - if true include a link to the snippet
             else paste the contents of the snippet
      \param id - primary key of code snippet row
      \param name - name of snippet
      \param snippets - content of snippet
      ***************************/
    virtual void slotAddSnippet(bool useInclude, int id, QString name, QString snippets);

signals:



protected:

    QPointer<RulesetSqlTableModel> model;

    /**
      \brief Checks if current ruleset is the default ruleset as held on
             the system configuration table
      \return true if current ruleset is default else false.
      **********************/
    virtual bool isRulesetDefault();


private:
    Ui::FormCfgRuleset *ui;
};

#endif // FORMCFGRULESET_H
